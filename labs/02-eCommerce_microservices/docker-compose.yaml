version: "3.7"
services:
  #
  # Customer Microservice
  # 
  customer-ms:
    build:
      context: ./customer
      # args:
        # MVN_ARGS: -DskipTests=true
      extra_hosts:
        - "customer-mongodb:127.0.0.1"
        - "order-postgres:127.0.0.1"
        - "kafka:127.0.0.1"
    container_name: customer-ms
    ports:
      - "8102:8102"
    depends_on:
      - mongodb_db
    

  mongodb_db:
    image: mongo:latest
    container_name: customer-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: customer_db
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db

  #
  # Order Microservice
  #
  order-ms:
    build:
      context: ./order
      # args:
          # MVN_ARGS: -DskipTests=true
      extra_hosts:
        - "customer-mongodb:127.0.0.1"
        - "order-postgres:127.0.0.1"
        - "kafka:127.0.0.1"
    container_name: order-ms
    ports:
      - "8103:8103"
    depends_on:
      - postgres_db

  postgres_db:
    image: postgres:latest
    container_name: order-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./order/dbinit.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  #
  # Notification
  #
  notification-ms:
    build:
      context: ./notification
      extra_hosts:
        - "customer-mongodb:127.0.0.1"
        - "order-postgres:127.0.0.1"
        - "kafka:127.0.0.1"
    container_name: notification-ms
    ports:
      - "8104:8104"
    depends_on:
      - kafka

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"

  kafka:
    image: bitnami/kafka
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      # The following port has ben added to let both internal (containers) and external (host) client to connect
      # refer to https://github.com/bitnami/containers/tree/main/bitnami/kafka#accessing-apache-kafka-with-internal-and-external-clients
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      # The following section has ben added to let both internal (containers) and external (host) client to connect
      # refer to https://github.com/bitnami/containers/tree/main/bitnami/kafka#accessing-apache-kafka-with-internal-and-external-clients
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

  


volumes:
 mongodb_data: {}
 postgres_data: {}
